{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "891290343541857534"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Azure Region to deploy the resources into. Default: resourceGroup().location"
      }
    },
    "logsEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Switch to enable/disable DiagnosticSettings for the resources. Default: false"
      }
    },
    "uniqueSuffix": {
      "type": "string",
      "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
      "metadata": {
        "description": "A unique string to add as a suffix to all resources. Default: substring(uniqueString(resourceGroup().id), 0, 5)"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('log-lecertrenew-{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Log Analytics Workspace name. Default: log-lecertrenew-$<uniqueSuffix>"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('appi-lecertrenew-{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Application Insights name. Default: appi-lecertrenew-$<uniqueSuffix>"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('stlecertrenew{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Storage Account name. Default: stlecertrenew$<uniqueSuffix>"
      }
    },
    "blobContainerName": {
      "type": "string",
      "defaultValue": "acme",
      "metadata": {
        "description": "Blob container name within Storage Account. Default: acme"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('asp-lecertrenew-{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "App Service Plan name. Default: asp-lecertrenew-$<uniqueSuffix>"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('func-lecertrenew-{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Function App name. Default: func-lecertrenew-$<uniqueSuffix>"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('kv-lecertrenew-{0}', parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Key Vault name. Default: kv-lecertrenew-$<uniqueSuffix>"
      }
    },
    "keyVaultCertNames": {
      "type": "string",
      "metadata": {
        "description": "Lets Encrypt SSL certificate name(s) within Azure Key Vault. Accepts single value or multiple comma-separated values"
      }
    }
  },
  "variables": {
    "defaultLogOrMetric": {
      "enabled": "[parameters('logsEnabled')]",
      "retentionPolicy": {
        "days": "[if(parameters('logsEnabled'), 7, 0)]",
        "enabled": "[parameters('logsEnabled')]"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2016-09-01",
      "name": "DoNotDelete",
      "properties": {
        "level": "CanNotDelete",
        "notes": "This lock prevents the accidental deletion of resources"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "metadata": {
        "description": "Allows Function App Managed Identity to write to Storage Account"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a4417e6f-fecd-4de8-b567-7b0420556985'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a4417e6f-fecd-4de8-b567-7b0420556985')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "metadata": {
        "description": "Allows Function App Managed Identity to manage Key Vault Certificates"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "retentionInDays": 30,
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('logAnalyticsWorkspaceName'))]",
      "name": "All Logs and Metrics",
      "properties": {
        "logs": [
          "[union(createObject('categoryGroup', 'allLogs'), variables('defaultLogOrMetric'))]"
        ],
        "metrics": [
          "[union(createObject('categoryGroup', 'allMetrics'), variables('defaultLogOrMetric'))]"
        ],
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      },
      "tags": {
        "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', parameters('functionAppName')))]": "Resource"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "properties": {
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 30
        },
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 14
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('blobContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "All Logs and Metrics",
      "properties": {
        "metrics": [
          "[union(createObject('categoryGroup', 'allMetrics'), variables('defaultLogOrMetric'))]"
        ],
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}', parameters('storageAccountName'), 'default')]",
      "name": "All Logs and Metrics",
      "properties": {
        "logs": [
          "[union(createObject('categoryGroup', 'allLogs'), variables('defaultLogOrMetric'))]"
        ],
        "metrics": [
          "[union(createObject('categoryGroup', 'allMetrics'), variables('defaultLogOrMetric'))]"
        ],
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/serverfarms/{0}', parameters('appServicePlanName'))]",
      "name": "All Logs and Metrics",
      "properties": {
        "metrics": [
          "[union(createObject('category', 'AllMetrics'), variables('defaultLogOrMetric'))]"
        ],
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "reserved": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "keyVaultReferenceIdentity": "SystemAssigned",
        "siteConfig": {
          "linuxFxVersion": "POWERSHELL|7.2",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "powershell"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "https://github.com/RylandDeGregory/AzFuncCertRenewal/blob/master/FunctionApp.zip?raw=true"
            },
            {
              "name": "KEY_VAULT_NAME",
              "value": "[parameters('keyVaultName')]"
            },
            {
              "name": "AKV_CERT_NAME",
              "value": "[parameters('keyVaultCertNames')]"
            },
            {
              "name": "STORAGE_ACCOUNT_NAME",
              "value": "[parameters('storageAccountName')]"
            },
            {
              "name": "BLOB_CONTAINER_NAME",
              "value": "[parameters('blobContainerName')]"
            },
            {
              "name": "POSHACME_HOME",
              "value": "./tmp"
            }
          ],
          "alwaysOn": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', parameters('functionAppName'))]",
      "name": "All Logs and Metrics",
      "properties": {
        "logs": [
          "[union(createObject('categoryGroup', 'allLogs'), variables('defaultLogOrMetric'))]"
        ],
        "metrics": [
          "[union(createObject('category', 'AllMetrics'), variables('defaultLogOrMetric'))]"
        ],
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "publicNetworkAccess": "Enabled",
        "softDeleteRetentionInDays": 30,
        "tenantId": "[tenant().tenantId]"
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "All Logs and Metrics",
      "properties": {
        "logs": [
          "[union(createObject('categoryGroup', 'allLogs'), variables('defaultLogOrMetric'))]"
        ],
        "metrics": [
          "[union(createObject('category', 'AllMetrics'), variables('defaultLogOrMetric'))]"
        ],
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    }
  ]
}